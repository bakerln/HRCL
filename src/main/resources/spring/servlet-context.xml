<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <context:property-placeholder ignore-unresolvable="true" location="classpath:/conf/application.properties" />
    <!--解决添加mvc:resources添加后无法访问Controller-->
    <mvc:annotation-driven>
        <!--<mvc:message-converters register-defaults="true">-->
            <!--<bean id="jacksonMessageConverter"-->
                  <!--class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
            <!--</bean>-->
        <!--</mvc:message-converters>-->
    </mvc:annotation-driven>
    <!--&lt;!&ndash; register DefaultAnnotationHandlerMapping and AnnotationMethodHandlerAdapter instance <mvc:annotation-driven /> &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
    <!--</bean>-->
    <!-- this config must be last -->
    <context:component-scan base-package="com.*">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>
    <!--静态资源映射-->
    <!--本项目把静态资源放在了WEB-INF的statics目录下，资源映射如下-->
    <!--但是项目部署到linux下发现WEB-INF的静态资源会出现无法解析的情况，但是本地tomcat访问正常，因此建议还是直接把静态资源放在webapp的statics下，映射配置如下-->
    <mvc:resources mapping="/assets/**" location="/assets/"/>
    <bean id="viewResolver" abstract="true">
        <!--<property name="attributes">-->
            <!--<props>-->
                <!--&lt;!&ndash;<prop key="versionNo">${versionNo}</prop>&ndash;&gt;-->
                <!--&lt;!&ndash;<prop key="jsPath">${jsPath}</prop>&ndash;&gt;-->
                <!--&lt;!&ndash;<prop key="commonJsPath">${commonJsPath}</prop>&ndash;&gt;-->
                <!--&lt;!&ndash;<prop key="minJs">${minJs}</prop>&ndash;&gt;-->
                <!--&lt;!&ndash;<prop key="staticServer">${staticServer}</prop>&ndash;&gt;-->
                <!--<prop key="dynamicServer">${dynamicServer}</prop>-->
            <!--</props>-->
        <!--</property>-->
    </bean>
    <!-- 配置注解驱动 可以将request参数与绑定到controller参数上 -->
    <!--<mvc:annotation-driven>-->
        <!--&lt;!&ndash;<mvc:message-converters register-defaults="true">&ndash;&gt;-->
            <!--&lt;!&ndash;<bean id="jacksonMessageConverter"&ndash;&gt;-->
                  <!--&lt;!&ndash;class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">&ndash;&gt;-->
            <!--&lt;!&ndash;</bean>&ndash;&gt;-->
        <!--&lt;!&ndash;</mvc:message-converters>&ndash;&gt;-->
    <!--</mvc:annotation-driven>-->

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀(如果最后一个还是表示文件夹,则最后的斜杠不要漏了) 使用JSP-->
    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <!--不允许在外部访问pages，必须通过Controller来访问页面-->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--网页必须在WEB-INF下，不能直接访问jsp，必须通过Controller访问-->
        <property name="prefix" value="/WEB-INF/views/"/><!--设置JSP文件的目录位置-->
        <property name="suffix" value=".jsp"/>
        <property name="attributes">
            <props>
                <prop key="dynamicServer">${dynamicServer}</prop>
                <prop key="test">111</prop>
            </props>
        </property>
    </bean>

</beans>